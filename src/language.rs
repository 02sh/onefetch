extern crate strum;

use std::fmt;

#[derive(PartialEq, Eq, Hash, Clone, EnumString)]
#[strum(serialize_all = "lowercase")]
pub enum Language {
    Assembly,
    C,
    Clojure,
    CoffeeScript,
    Cpp,
    Csharp,
    CSS,
    Dart,
    Elm,
    Erlang,
    Forth,
    Go,
    Haskell,
    HTML,
    Idris,
    Java,
    Kotlin,
    Lisp,
    Lua,
    Nim,
    ObjectiveC,
    PureScript,
    Python,
    R,
    Ruby,
    Rust,
    Scala,
    Shell,
    Swift,
    Tcl,
    TypeScript,
    JavaScript,
    Vue,
    Perl,
    Php,
    Zig,
    Unknown,
}

impl fmt::Display for Language {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match *self {
            Language::Assembly => write!(f, "Assembly"),
            Language::C => write!(f, "C"),
            Language::Clojure => write!(f, "Clojure"),
            Language::CoffeeScript => write!(f, "CoffeeScript"),
            Language::Cpp => write!(f, "C++"),
            Language::Csharp => write!(f, "C#"),
            Language::CSS => write!(f, "CSS"),
            Language::Dart => write!(f, "Dart"),
            Language::Elm => write!(f, "Elm"),
            Language::Erlang => write!(f, "Erlang"),
            Language::Forth => write!(f, "Forth"),
            Language::Go => write!(f, "Go"),
            Language::Haskell => write!(f, "Haskell"),
            Language::HTML => write!(f, "HTML"),
            Language::Idris => write!(f, "Idris"),
            Language::Java => write!(f, "Java"),
            Language::Kotlin => write!(f, "Kotlin"),
            Language::Lisp => write!(f, "Lisp"),
            Language::Lua => write!(f, "Lua"),
            Language::Nim => write!(f, "Nim"),
            Language::ObjectiveC => write!(f, "Objective-C"),
            Language::PureScript => write!(f, "PureScript"),
            Language::Python => write!(f, "Python"),
            Language::R => write!(f, "R"),
            Language::Ruby => write!(f, "Ruby"),
            Language::Rust => write!(f, "Rust"),
            Language::Scala => write!(f, "Scala"),
            Language::Shell => write!(f, "Shell"),
            Language::Swift => write!(f, "Swift"),
            Language::Tcl => write!(f, "Tcl"),
            Language::TypeScript => write!(f, "TypeScript"),
            Language::JavaScript => write!(f, "JavaScript"),
            Language::Vue => write!(f, "Vue"),
            Language::Perl => write!(f, "Perl"),
            Language::Php => write!(f, "Php"),
            Language::Zig => write!(f, "Zig"),
            Language::Unknown => write!(f, "Unknown"),
        }
    }
}
